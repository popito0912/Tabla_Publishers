//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWeb.srPublishers {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srPublishers.wsPublishersSoap")]
    public interface wsPublishersSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPublishers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarPublishers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarPublishers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarPublishersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPublishers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarPublishers(string Id, string Name, string City, string State, string Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarPublishers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarPublishersAsync(string Id, string Name, string City, string State, string Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarPublishers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarPublishers(string Id, string Name, string City, string State, string Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarPublishers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarPublishersAsync(string Id, string Name, string City, string State, string Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPublishers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarPublishers(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarPublishers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarPublishersAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPublishers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarPublishers(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPublishers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarPublishersAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarStores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarStores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarStores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarStoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarStores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarStores(string Id, string Name, string Address, string City, string State, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarStores", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarStoresAsync(string Id, string Name, string Address, string City, string State, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarStores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarStores(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarStores", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarStoresAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarStores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarStores(string Id, string Name, string Address, string City, string State, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarStores", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarStoresAsync(string Id, string Name, string Address, string City, string State, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarStores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarStores(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarStores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarStoresAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarJobs(string Id, string Descripcion, string Min1, string Max1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarJobsAsync(string Id, string Descripcion, string Min1, string Max1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] EliminarJobs(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarJobsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ActualizarJobs(string Id, string Descripcion, string Min1, string Max1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarJobsAsync(string Id, string Descripcion, string Min1, string Max1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarJobs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarJobs(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarJobs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarJobsAsync(string texto, string criterio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsPublishersSoapChannel : ClienteWeb.srPublishers.wsPublishersSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsPublishersSoapClient : System.ServiceModel.ClientBase<ClienteWeb.srPublishers.wsPublishersSoap>, ClienteWeb.srPublishers.wsPublishersSoap {
        
        public wsPublishersSoapClient() {
        }
        
        public wsPublishersSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsPublishersSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsPublishersSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsPublishersSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ListarPublishers() {
            return base.Channel.ListarPublishers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarPublishersAsync() {
            return base.Channel.ListarPublishersAsync();
        }
        
        public string[] AgregarPublishers(string Id, string Name, string City, string State, string Country) {
            return base.Channel.AgregarPublishers(Id, Name, City, State, Country);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarPublishersAsync(string Id, string Name, string City, string State, string Country) {
            return base.Channel.AgregarPublishersAsync(Id, Name, City, State, Country);
        }
        
        public string[] ActualizarPublishers(string Id, string Name, string City, string State, string Country) {
            return base.Channel.ActualizarPublishers(Id, Name, City, State, Country);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarPublishersAsync(string Id, string Name, string City, string State, string Country) {
            return base.Channel.ActualizarPublishersAsync(Id, Name, City, State, Country);
        }
        
        public string[] EliminarPublishers(string id) {
            return base.Channel.EliminarPublishers(id);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarPublishersAsync(string id) {
            return base.Channel.EliminarPublishersAsync(id);
        }
        
        public System.Data.DataSet BuscarPublishers(string texto, string criterio) {
            return base.Channel.BuscarPublishers(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarPublishersAsync(string texto, string criterio) {
            return base.Channel.BuscarPublishersAsync(texto, criterio);
        }
        
        public System.Data.DataSet ListarStores() {
            return base.Channel.ListarStores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarStoresAsync() {
            return base.Channel.ListarStoresAsync();
        }
        
        public string[] AgregarStores(string Id, string Name, string Address, string City, string State, string Zip) {
            return base.Channel.AgregarStores(Id, Name, Address, City, State, Zip);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarStoresAsync(string Id, string Name, string Address, string City, string State, string Zip) {
            return base.Channel.AgregarStoresAsync(Id, Name, Address, City, State, Zip);
        }
        
        public string[] EliminarStores(string id) {
            return base.Channel.EliminarStores(id);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarStoresAsync(string id) {
            return base.Channel.EliminarStoresAsync(id);
        }
        
        public string[] ActualizarStores(string Id, string Name, string Address, string City, string State, string Zip) {
            return base.Channel.ActualizarStores(Id, Name, Address, City, State, Zip);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarStoresAsync(string Id, string Name, string Address, string City, string State, string Zip) {
            return base.Channel.ActualizarStoresAsync(Id, Name, Address, City, State, Zip);
        }
        
        public System.Data.DataSet BuscarStores(string texto, string criterio) {
            return base.Channel.BuscarStores(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarStoresAsync(string texto, string criterio) {
            return base.Channel.BuscarStoresAsync(texto, criterio);
        }
        
        public System.Data.DataSet ListarJobs() {
            return base.Channel.ListarJobs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarJobsAsync() {
            return base.Channel.ListarJobsAsync();
        }
        
        public string[] AgregarJobs(string Id, string Descripcion, string Min1, string Max1) {
            return base.Channel.AgregarJobs(Id, Descripcion, Min1, Max1);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarJobsAsync(string Id, string Descripcion, string Min1, string Max1) {
            return base.Channel.AgregarJobsAsync(Id, Descripcion, Min1, Max1);
        }
        
        public string[] EliminarJobs(string id) {
            return base.Channel.EliminarJobs(id);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarJobsAsync(string id) {
            return base.Channel.EliminarJobsAsync(id);
        }
        
        public string[] ActualizarJobs(string Id, string Descripcion, string Min1, string Max1) {
            return base.Channel.ActualizarJobs(Id, Descripcion, Min1, Max1);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarJobsAsync(string Id, string Descripcion, string Min1, string Max1) {
            return base.Channel.ActualizarJobsAsync(Id, Descripcion, Min1, Max1);
        }
        
        public System.Data.DataSet BuscarJobs(string texto, string criterio) {
            return base.Channel.BuscarJobs(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarJobsAsync(string texto, string criterio) {
            return base.Channel.BuscarJobsAsync(texto, criterio);
        }
    }
}
